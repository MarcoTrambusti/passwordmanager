<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ast.projects</groupId>
	<artifactId>passwordmanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>

	<name>passwordmanager</name>
	<!-- FIXME change it to the project's website -->
	<url>http://www.example.com</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.15.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>3.0.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<!-- configured in pluginManagement -->
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>ast.projects.passwordmanager.App</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.6.0</version>
				<executions>
					<execution>
						<id>run-jar-with-dependencies</id>
						<phase>verify</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
								<argument>-jar</argument>
								<argument>
									${project.build.directory}/${project.artifactId}-${project.version}-jar-with-dependencies.jar</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven
			defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see
				https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see
				https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<!-- site lifecycle, see
				https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.5.2</version>
					<configuration>
						<targetClasses>
							<!--TODO changeme-->
							<param>ast.projects.passwordmanager.App*</param>
						</targetClasses>
						<targetTests>
							<!--TODO changeme-->
							<param>ast.projects.passwordmanager.*</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<!--TODO uncomment when there're tests <mutationThreshold>80</mutationThreshold>-->
					</configuration>
					<executions>
						<execution>
							<phase>test</phase>
							<goals>
								<goal>mutationCoverage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.8</version>
					<configuration>
						<excludes>
							<exclude>**/Main.*</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<goals>
								<!-- binds by default to the phase "verify" -->
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<!--TODO uncomment when there're tests <minimum>0.50</minimum>-->
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.45.0</version>
						<configuration>
							<showLogs>true</showLogs>
							<verbose>build</verbose>
							<!--<dockerHost>unix:///home/marco/.docker/desktop/docker.sock</dockerHost>-->
							<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
							<images>
								<image>
									<alias>java-app-password</alias>
									<name>java-app-password</name>
									<build>
										<contextDir>${project.basedir}</contextDir>
										<args>
											<jarToCopy>
												${project.artifactId}-${project.version}-jar-with-dependencies.jar</jarToCopy>
										</args>
									</build>
									<run>
										<network>
											<mode>custom</mode>
											<name>app-network</name>
										</network>
										<wait>
											<log>Hello World!</log>
											<time>10000</time>
										</wait>
										<dependsOn>
											<container>db</container>
										</dependsOn>
									</run>
								</image>
								<image>
									<name>db</name>
									<alias>db</alias>
									<build>
										<from>mariadb:latest</from>
										<healthCheck>
											<interval>10s</interval>
											<timeout>50s</timeout>
											<retries>3</retries>
											<start-period>20s</start-period>
											<!--	<cmd>mariadb myDb -umyuser
											-pmypass</cmd>-->
											<cmd>healthcheck.sh --connect
												--innodb_initialized</cmd>
										</healthCheck>
										<assembly>
											<mode>dir</mode>
											<targetDir>
												/docker-entrypoint-initdb.d</targetDir>
											<inline>
												<files>
													<file>
														<source>
															./mariadb-init.sql</source>
													</file>
												</files>
											</inline>
										</assembly>
										<env>
											<MARIADB_ROOT_PASSWORD>mypass</MARIADB_ROOT_PASSWORD>
											<MARIADB_DATABASE>myDb</MARIADB_DATABASE>
											<MARIADB_USER>myuser</MARIADB_USER>
											<MARIADB_PASSWORD>mypass</MARIADB_PASSWORD>
										</env>
									</build>
									<run>
										<network>
											<mode>custom</mode>
											<name>app-network</name>
											<alias>db</alias>
										</network>
										<wait>
											<healthy>true</healthy>
											<time>40000</time>
										</wait>
									</run>
								</image>
								<!--<image>
									<alias>app</alias>
									<external>
										<type>compose</type>
										<basedir>${project.basedir}</basedir>
									</external>
									<run>
										<wait>
											<log>Hello World!</log>
											<time>20000</time>
										</wait>
									</run>
								</image>-->
							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker-build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker-verify</id>
								<phase>verify</phase>
								<goals>
									<goal>start</goal>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker-compose</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.45.0</version>
						<configuration>
							<showLogs>true</showLogs>
							<verbose>build</verbose>
							<images>
								<image>
									<alias>app</alias>
									<external>
										<type>compose</type>
										<basedir>${project.basedir}</basedir>
									</external>
									<run>
										<wait>
											<log>Hello World!</log>
											<time>20000</time>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker-build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker-verify</id>
								<phase>verify</phase>
								<goals>
									<goal>start</goal>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
