<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ast.projects</groupId>
	<artifactId>passwordmanager</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>passwordmanager</name>
	<url>https://github.com/MarcoTrambusti/passwordmanager</url>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<!--For each rule to be ignore, add another eXX and two corresponding properties with eXX in the name as below -->
		<sonar.issue.ignore.multicriteria>e11,e12</sonar.issue.ignore.multicriteria>
		<!-- Disable rule for "Tests should include assertions": SonarQube isnot aware of AssertJ Swing -->
		<sonar.issue.ignore.multicriteria.e11.ruleKey>
			java:S2699
		</sonar.issue.ignore.multicriteria.e11.ruleKey>
		<sonar.issue.ignore.multicriteria.e11.resourceKey>
			**/PasswordManagerView*.java
		</sonar.issue.ignore.multicriteria.e11.resourceKey>
		<!-- Disable rule for: Rename class "PasswordManagerAppE2E" to match the regular expression: '^((Test|IT)[a-zA-Z0-9_]+|[A-Z][a-zA-Z0-9_]*(Test|Tests|TestCase|IT|ITCase))$'-->
		<sonar.issue.ignore.multicriteria.e12.ruleKey>
			java:S3577
		</sonar.issue.ignore.multicriteria.e12.ruleKey>
		<sonar.issue.ignore.multicriteria.e12.resourceKey>
			**/PasswordManagerAppE2E.java
		</sonar.issue.ignore.multicriteria.e12.resourceKey>
		<sonar.coverage.exclusions>
			**/model/*.*,
			**/PasswordManagerSwingApp.java
		</sonar.coverage.exclusions>
		<sonar.junit.reportPaths>
			${project.build.directory}/surefire-reports,
			${project.build.directory}/failsafe-reports
		</sonar.junit.reportPaths>
		<testcontainers.version>1.19.3</testcontainers.version>
		<db_host>localhost</db_host>
		<db_username>root</db_username>
		<db_password></db_password>
		<db_port>3306</db_port>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.17.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.17.1</version>
		</dependency>
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
			<version>3.4.1</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.6</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.6.15.Final</version>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.6.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>2.1.212</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-reload4j</artifactId>
			<version>1.7.36</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>5.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>4.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-imaging</artifactId>
			<version>1.0.0-alpha5</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-swing-junit</artifactId>
			<version>3.17.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>mariadb</artifactId>
			<version>1.20.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<pluginManagement>
			<!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>2.22.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
				<plugin>
					<groupId>org.pitest</groupId>
					<artifactId>pitest-maven</artifactId>
					<version>1.5.2</version>
					<configuration>
						<jvmArgs>
							<jvmArg>-Djava.awt.headless=false</jvmArg>
						</jvmArgs>
						<targetClasses>
							<param>ast.projects.passwordmanager.app.StringValidator</param>
							<param>ast.projects.passwordmanager.model.*</param>
							<param>ast.projects.passwordmanager.controller.*</param>
							<param>ast.projects.passwordmanager.view.*</param>
							<param>ast.projects.passwordmanager.repository.*</param>
						</targetClasses>
						<avoidCallsTo>
							<param>java.awt.Window.setBounds</param>
						</avoidCallsTo>
						<targetTests>
							<param>ast.projects.passwordmanager.*</param>
							<param>
								ast.projects.passwordmanager.app.StringValidatorTest</param>
						</targetTests>
						<mutators>
							<mutator>DEFAULTS</mutator>
						</mutators>
						<mutationThreshold>100</mutationThreshold>
						<excludedTestClasses>
							<param>ast.projects.passwordmanager.**.*IT</param>
							<param>ast.projects.passwordmanager.**.*E2E</param>
						</excludedTestClasses>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.8</version>
					<configuration>
						<excludes>
							<exclude>**/PasswordManagerSwingApp.*</exclude>
							<exclude>**/src/test/java**</exclude>
							<exclude>**/src/it/java**</exclude>
							<exclude>**/src/e2e/java**</exclude>
							<exclude>**/User.setUsername()</exclude>
							<exclude>**/User.setEmail()</exclude>
							<exclude>**/User.setPassword()</exclude>
							<exclude>**/Password.get**</exclude>
							<exclude>**/Password.set**</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<!-- binds by default to the phase "initialize" -->
								<goal>prepare-agent</goal>
								<!-- binds by default to the phase "verify" -->
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<goals>
								<!-- binds by default to the phase "verify" -->
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<element>PACKAGE</element>
										<limits>
											<limit>
												<counter>LINE</counter>
												<value>COVEREDRATIO</value>
												<minimum>1</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>4.3.0</version>
					<dependencies>
						<!-- This is required when using JDK 9 or higher since javax.xml.bind has been removed from the JDK -->
						<dependency>
							<groupId>javax.xml.bind</groupId>
							<artifactId>jaxb-api</artifactId>
							<version>2.3.1</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>4.0.0.4121</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
								<source>src/e2e/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<environmentVariables>
						<TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>
					</environmentVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.5.0</version>
				<configuration>
					<environmentVariables>
						<TESTCONTAINERS_RYUK_DISABLED>true</TESTCONTAINERS_RYUK_DISABLED>
					</environmentVariables>
				</configuration>
				<executions>
					<execution>
						<id>default-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
					<execution>
						<id>e2e-tests</id>
						<phase>integration-test</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/*IT.java</exclude>
							</excludes>
							<includes>
								<include>**/*E2E.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>ast.projects.passwordmanager.app.PasswordManagerSwingApp</mainClass>
								</manifest>
							</archive>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<properties>
				<db_host>db</db_host>
				<db_username>root</db_username>
				<db_password>mypass</db_password>
				<db_port>3306</db_port>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.45.0</version>
						<configuration>
							<showLogs>true</showLogs>
							<verbose>build</verbose>
							<autoCreateCustomNetworks>true</autoCreateCustomNetworks>
							<images>
								<image>
									<alias>java-app-password</alias>
									<name>java-app-password</name>
									<build>
										<contextDir>${project.basedir}</contextDir>
										<args>
											<jarToCopy>${project.artifactId}-${project.version}-jar-with-dependencies.jar</jarToCopy>
										</args>
									</build>
									<run>
										<network>
											<mode>custom</mode>
											<name>app-network</name>
										</network>
										<wait>
											<log>Hello World!</log>
											<time>10000</time>
										</wait>
										<dependsOn>
											<container>db</container>
										</dependsOn>
									</run>
								</image>
								<image>
									<name>db</name>
									<alias>db</alias>
									<build>
										<from>mariadb:10.5.5</from>
										<healthCheck>
											<interval>10s</interval>
											<timeout>50s</timeout>
											<retries>3</retries>
											<start-period>20s</start-period>
											<cmd>healthcheck.sh --connect --innodb_initialized</cmd>
										</healthCheck>
										<assembly>
											<mode>dir</mode>
											<targetDir>/docker-entrypoint-initdb.d</targetDir>
											<inline>
												<files>
													<file>
														<source>./mariadb-init.sql</source>
													</file>
												</files>
											</inline>
										</assembly>
										<env>
											<MARIADB_ROOT_PASSWORD>mypass</MARIADB_ROOT_PASSWORD>
											<MARIADB_DATABASE>myDb</MARIADB_DATABASE>
											<MARIADB_USER>myuser</MARIADB_USER>
											<MARIADB_PASSWORD>mypass</MARIADB_PASSWORD>
										</env>
									</build>
									<run>
										<network>
											<mode>custom</mode>
											<name>app-network</name>
											<alias>db</alias>
										</network>
										<wait>
											<healthy>true</healthy>
											<time>40000</time>
										</wait>
									</run>
								</image>
							</images>
						</configuration>
						<executions>
							<execution>
								<id>docker-build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
							<execution>
								<id>docker-verify</id>
								<phase>verify</phase>
								<goals>
									<goal>start</goal>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured in pluginManagement -->
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mutation-testing</id>
			<build>
				<plugins>
					<plugin>
						<!-- configured also in pluginManagement -->
						<groupId>org.pitest</groupId>
						<artifactId>pitest-maven</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>mutationCoverage</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
